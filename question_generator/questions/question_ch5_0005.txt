```
#### Enunciado

Desenvolva um programa Python que utilize uma função para analisar uma lista de números inteiros. A função deve receber uma lista de números como argumento e retornar três informações principais sobre essa lista: a soma de todos os elementos, a quantidade de números pares e a quantidade de números ímpares.

No programa principal, você deve:
- Criar uma lista de números inteiros (pode ser uma lista predefinida ou uma lista que o usuário digitaria, mas para os testes, usaremos uma predefinida).
- Chamar a função desenvolvida, passando a lista como argumento.
- Desempacotar os valores retornados pela função em variáveis separadas.
- Imprimir os resultados de forma clara e legível, indicando a soma total, o número de pares e o número de ímpares.

Sua solução deve:
- Definir uma função chamada `analisar_lista_numeros`.
- Utilizar `type hints` para os parâmetros e o retorno da função (a função deve receber uma lista de inteiros e retornar uma tupla contendo três inteiros).
- Incluir uma `docstring` clara que descreva o propósito da função, seus argumentos e o que ela retorna.
- Retornar a soma dos elementos, a contagem de números pares e a contagem de números ímpares, nesta ordem.

#### Code Solução

```python
from typing import List, Tuple

def analisar_lista_numeros(numeros: List[int]) -> Tuple[int, int, int]:
    """
    Analisa uma lista de números inteiros, calculando a soma total,
    a quantidade de números pares e a quantidade de números ímpares.

    Args:
        numeros (List[int]): Uma lista de números inteiros.

    Returns:
        Tuple[int, int, int]: Uma tupla contendo (soma_total, qtd_pares, qtd_impares).
    """
    soma_total = 0
    qtd_pares = 0
    qtd_impares = 0

    for num in numeros:
        soma_total += num
        if num % 2 == 0:
            qtd_pares += 1
        else:
            qtd_impares += 1
            
    return soma_total, qtd_pares, qtd_impares

# --- Exemplos de uso no programa principal para os testes ---

# Teste 1
lista_teste_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
soma_1, pares_1, impares_1 = analisar_lista_numeros(lista_teste_1)
print(f"Soma total dos números: {soma_1}")
print(f"Quantidade de números pares: {pares_1}")
print(f"Quantidade de números ímpares: {impares_1}")

# Teste 2 (apenas pares)
lista_teste_2 = [20, 22, 24, 26, 28]
soma_2, pares_2, impares_2 = analisar_lista_numeros(lista_teste_2)
print(f"\nSoma total dos números: {soma_2}")
print(f"Quantidade de números pares: {pares_2}")
print(f"Quantidade de números ímpares: {impares_2}")

# Teste 3 (apenas ímpares e negativos)
lista_teste_3 = [-1, -3, -5, -7, -9]
soma_3, pares_3, impares_3 = analisar_lista_numeros(lista_teste_3)
print(f"\nSoma total dos números: {soma_3}")
print(f"Quantidade de números pares: {pares_3}")
print(f"Quantidade de números ímpares: {impares_3}")

# Teste 4 (lista vazia)
lista_teste_4 = []
soma_4, pares_4, impares_4 = analisar_lista_numeros(lista_teste_4)
print(f"\nSoma total dos números: {soma_4}")
print(f"Quantidade de números pares: {pares_4}")
print(f"Quantidade de números ímpares: {impares_4}")
```

#### Testes

**Teste 1**
Entrada (lista definida no código):
```python
lista_teste_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
```
Saída:
```
Soma total dos números: 55
Quantidade de números pares: 5
Quantidade de números ímpares: 5
```

**Teste 2**
Entrada (lista definida no código):
```python
lista_teste_2 = [20, 22, 24, 26, 28]
```
Saída:
```
Soma total dos números: 120
Quantidade de números pares: 5
Quantidade de números ímpares: 0
```

**Teste 3**
Entrada (lista definida no código):
```python
lista_teste_3 = [-1, -3, -5, -7, -9]
```
Saída:
```
Soma total dos números: -25
Quantidade de números pares: 0
Quantidade de números ímpares: 5
```

**Teste 4**
Entrada (lista definida no código):
```python
lista_teste_4 = []
```
Saída:
```
Soma total dos números: 0
Quantidade de números pares: 0
Quantidade de números ímpares: 0
```