```python
# Enunciado:
# Análise de Lista: Menor, Maior e Soma
#
# Desenvolva um programa Python que utilize funções para analisar uma lista de números inteiros. O programa deve seguir os seguintes passos:
#
# 1.  **Leitura da Entrada:** O programa deve ler uma linha de entrada que contém números inteiros separados por espaços.
# 2.  **Conversão para Lista:** Converta a string de entrada em uma lista de números inteiros.
# 3.  **Definição da Função `analisar_lista_numeros`:**
#     *   Crie uma função chamada `analisar_lista_numeros` que receba uma lista de números inteiros como argumento.
#     *   Esta função deve calcular e retornar **três valores**: o menor número presente na lista, o maior número da lista e a soma de todos os elementos da lista.
#     *   A função deve ser robusta para lidar com uma lista vazia (o que pode ocorrer se a entrada for uma linha vazia ou apenas espaços). Nesse caso, a função deve retornar `(None, None, None)`.
#     *   Utilize `type hints` e `docstrings` para documentar a função, conforme as boas práticas de Python.
# 4.  **Processamento e Saída no Programa Principal:**
#     *   No programa principal, chame a função `analisar_lista_numeros` com a lista obtida da entrada.
#     *   Com base nos valores retornados pela função, imprima os resultados de forma clara.
#     *   Se a lista original for vazia (e, portanto, a função retornar `(None, None, None)`), imprima a mensagem: "Lista vazia. Não é possível calcular as estatísticas."
#
# Exemplo: Se a entrada for "10 5 20 -3 8", a função deve identificar que o menor é -3, o maior é 20 e a soma é 40.

# Code Solução:
def analisar_lista_numeros(numeros: list[int]) -> tuple[int | None, int | None, int | None]:
    """
    Analisa uma lista de números inteiros, retornando o menor, o maior e a soma dos elementos.

    Args:
        numeros (list[int]): A lista de números inteiros a ser analisada.

    Returns:
        tuple[int | None, int | None, int | None]: Uma tupla contendo o menor número,
        o maior número e a soma dos elementos da lista. Retorna (None, None, None)
        se a lista for vazia.
    """
    if not numeros:
        return (None, None, None)
    
    menor = min(numeros)
    maior = max(numeros)
    soma = sum(numeros)
    
    return (menor, maior, soma)

# --- Programa Principal ---
# Leitura da entrada
entrada_str = input()

# Converte a string de entrada para uma lista de inteiros
# Se a entrada for vazia ou conter apenas espaços, a lista será vazia.
if entrada_str.strip(): # Verifica se a string não está vazia ou contém apenas espaços em branco
    numeros_str = entrada_str.split()
    lista_de_numeros = [int(n) for n in numeros_str]
else:
    lista_de_numeros = [] # Lista vazia se a entrada for vazia/apenas espaços

# Chamada da função e desempacotamento dos resultados
menor_val, maior_val, soma_val = analisar_lista_numeros(lista_de_numeros)

# Impressão dos resultados
if menor_val is None: # Significa que a lista estava vazia
    print("Lista vazia. Não é possível calcular as estatísticas.")
else:
    print(f"Menor: {menor_val}")
    print(f"Maior: {maior_val}")
    print(f"Soma: {soma_val}")
```

#### Testes

**Teste 1**
Entrada:
```
10 5 20 -3 8
```
Saída:
```
Menor: -3
Maior: 20
Soma: 40
```

**Teste 2**
Entrada:
```

```
Saída:
```
Lista vazia. Não é possível calcular as estatísticas.
```

**Teste 3**
Entrada:
```
7
```
Saída:
```
Menor: 7
Maior: 7
Soma: 7
```

**Teste 4**
Entrada:
```
2 2 2 2
```
Saída:
```
Menor: 2
Maior: 2
Soma: 8
```