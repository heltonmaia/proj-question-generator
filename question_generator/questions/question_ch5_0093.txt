```
### Enunciado

Desenvolva um programa em Python que receba uma lista de números inteiros e, utilizando uma função, calcule a soma de todos os números pares e a soma de todos os números ímpares presentes nessa lista.

Sua solução deve:
1.  **Definir uma função** chamada `calcular_somas_par_impar` que aceite uma lista de números inteiros como parâmetro.
2.  Dentro desta função, itere sobre a lista para identificar se cada número é par ou ímpar, acumulando suas respectivas somas.
3.  A função deve **retornar dois valores**: a soma dos números pares e a soma dos números ímpares, em uma tupla `(soma_pares, soma_impares)`.
4.  No programa principal, leia uma linha de números inteiros (separados por espaço) fornecidos pelo usuário, converta-os para uma lista de inteiros, chame a função criada e imprima os resultados de forma clara.

**Exemplo de interação:**

Se a entrada for `1 2 3 4 5 6`, a saída esperada seria:
```
Soma dos pares: 12
Soma dos ímpares: 9
```
(Pares: 2+4+6=12; Ímpares: 1+3+5=9)

### Code Solução

```python
def calcular_somas_par_impar(lista_numeros: list[int]) -> tuple[int, int]:
    """
    Calcula a soma dos números pares e a soma dos números ímpares em uma lista.

    Args:
        lista_numeros: Uma lista de números inteiros.

    Returns:
        Uma tupla contendo (soma_pares, soma_impares).
    """
    soma_pares = 0
    soma_impares = 0

    for numero in lista_numeros:
        if numero % 2 == 0:
            soma_pares += numero
        else:
            soma_impares += numero
            
    return soma_pares, soma_impares

# Leitura da entrada (uma linha de números separados por espaço)
# O método split() sem argumentos lida com múltiplos espaços e linhas vazias
entrada_str = input().split() 

# Converte a lista de strings para uma lista de inteiros
numeros_int = [int(x) for x in entrada_str]

# Chamada da função com a lista de números
soma_pares_total, soma_impares_total = calcular_somas_par_impar(numeros_int)

# Impressão dos resultados
print(f"Soma dos pares: {soma_pares_total}")
print(f"Soma dos ímpares: {soma_impares_total}")
```

### Testes

**Teste 1**
Entrada:
```
1 2 3 4 5 6
```
Saída:
```
Soma dos pares: 12
Soma dos ímpares: 9
```

**Teste 2**
Entrada:
```
10 20 30 40 50
```
Saída:
```
Soma dos pares: 150
Soma dos ímpares: 0
```

**Teste 3**
Entrada:
```
11 21 31 41 51
```
Saída:
```
Soma dos pares: 0
Soma dos ímpares: 155
```

**Teste 4**
Entrada:
```
-1 -2 -3 -4 -5 -6
```
Saída:
```
Soma dos pares: -12
Soma dos ímpares: -9
```

**Teste 5**
Entrada:
```

```
Saída:
```
Soma dos pares: 0
Soma dos ímpares: 0
```