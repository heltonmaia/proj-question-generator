Você é um especialista em criar exercícios de programação Python para iniciantes e intermediários. Sua tarefa é gerar uma questão de programação completa, incluindo enunciado, solução em código e testes.

## Instruções Gerais
- **Foco Educacional:** Crie questões que sejam educativas e progressivas, visando o aprendizado.
- **Conceitos Fundamentais:** Priorize conceitos essenciais de Python.
- **Clareza e Acessibilidade:** Utilize uma linguagem clara, concisa e acessível para o nível do público-alvo.
- **Exemplos Práticos:** Inclua exemplos práticos para ilustrar o problema quando apropriado.
- **Formato Estruturado:** Siga rigorosamente o formato de saída especificado abaixo.

## Material de Referência
Analisando o material de estudo Python do "Capítulo 5: Funções e Modularização", um conceito adequado para uma questão de nível iniciante/intermediário é o uso de **Funções com Múltiplos Valores de Retorno** e **Docstrings e Type Hints**, combinando com o uso de **Funções Built-in**.

---

### Formato da Questão Gerada

Cada questão deve conter apenas as seguintes seções, não insira nada além dos itens abaixo na questão:

1.  **Enunciado:** Uma descrição clara do problema a ser resolvido.
2.  **Code Solução:** O código Python funcional que resolve o problema proposto no enunciado.
3.  **Testes:** Conjuntos de entrada e saída esperada para verificar a correção da `Code Solução`.

---

### Questão Gerada

#### Enunciado

Crie uma função Python que receba uma lista de números (inteiros ou de ponto flutuante) como entrada. A função deve calcular e retornar quatro valores: a soma de todos os elementos, a média dos elementos, o menor valor e o maior valor da lista.

A função deve ser nomeada `analisar_estatisticas_lista` e incluir `docstrings` e `type hints` para clareza e documentação, conforme recomendado no material de estudo.

**Casos Especiais:**
- Se a lista estiver vazia, a função deve retornar uma tupla com valores indicando a ausência de dados: `(0.0, 0.0, None, None)`.
- A média deve ser calculada como um número de ponto flutuante.
- O menor e o maior valor devem ser retornados como números de ponto flutuante (ou `None` se a lista for vazia).

No programa principal, você deve ler uma linha de entrada contendo números separados por vírgulas (ex: `10.5,20.0,5.0,15.0`). Converta esses números para uma lista de valores numéricos e, em seguida, chame a função `analisar_estatisticas_lista` com essa lista. Por fim, imprima os resultados da soma, média, menor e maior valor, cada um em uma nova linha e no formato especificado nos testes.

#### Code Solução

```python
from typing import List, Tuple, Optional

def analisar_estatisticas_lista(numeros: List[float]) -> Tuple[float, float, Optional[float], Optional[float]]:
    """
    Calcula a soma, média, menor e maior valor de uma lista de números.

    Args:
        numeros: Uma lista de números (int ou float).

    Returns:
        Uma tupla contendo (soma, media, menor_valor, maior_valor).
        Retorna (0.0, 0.0, None, None) se a lista estiver vazia.
    """
    if not numeros:
        return 0.0, 0.0, None, None

    soma_total = sum(numeros)
    media = float(soma_total) / len(numeros)
    menor = min(numeros)
    maior = max(numeros)

    return soma_total, media, float(menor), float(maior)

# Programa principal
entrada_str = input()

# Converte a entrada para uma lista de floats, tratando entradas vazias e strings vazias após a vírgula
if entrada_str.strip() == "":
    lista_numeros = []
else:
    lista_numeros = [float(x.strip()) for x in entrada_str.split(',') if x.strip()]

soma, media, menor, maior = analisar_estatisticas_lista(lista_numeros)

# Formata a saída para valores None
menor_str = f"{menor}" if menor is not None else "None"
maior_str = f"{maior}" if maior is not None else "None"

print(f"Soma: {soma}")
print(f"Média: {media}")
print(f"Menor: {menor_str}")
print(f"Maior: {maior_str}")
```

#### Testes

**Teste 1**
Entrada:
```
10.0,20.0,5.0,15.0
```
Saída:
```
Soma: 50.0
Média: 12.5
Menor: 5.0
Maior: 20.0
```

**Teste 2**
Entrada:
```
1,5,2,8,3
```
Saída:
```
Soma: 19.0
Média: 3.8
Menor: 1.0
Maior: 8.0
```

**Teste 3**
Entrada:
```
-10.0,-5.0,-20.0,-1.0
```
Saída:
```
Soma: -36.0
Média: -9.0
Menor: -20.0
Maior: -1.0
```

**Teste 4**
Entrada:
```
42.0
```
Saída:
```
Soma: 42.0
Média: 42.0
Menor: 42.0
Maior: 42.0
```

**Teste 5**
Entrada:
```

```
Saída:
```
Soma: 0.0
Média: 0.0
Menor: None
Maior: None
```