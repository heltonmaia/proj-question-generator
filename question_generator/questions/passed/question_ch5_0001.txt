#### Enunciado

Imagine que você tem uma lista de números. O objetivo é calcular o `n`-ésimo número da sequência de Fibonacci para cada número dessa lista e imprimir a soma total desses números.

A sequência de Fibonacci é como uma escada em espiral, onde cada número é a soma dos dois anteriores. Ela começa com 0 e 1, e continua infinitamente: 0, 1, 1, 2, 3, 5, 8, 13, 21…

Para isso, você precisará criar duas funções recursivas:
1.  **A função `fibonacci`:** Essa função receberá um número inteiro `n` como entrada e, usando a recursão, calculará o `n`-ésimo número correspondente na sequência de Fibonacci. Lembre-se que o 0-ésimo termo é 0 e o 1-ésimo termo é 1.
2.  **A função `soma_recursiva_lista`:** Essa função receberá uma lista de números inteiros como argumento e, novamente usando a recursão, somará todos os elementos dessa lista.

No final, seu programa deve ler uma sequência de números inteiros separados por vírgulas como entrada. Para cada número na sequência, calcule o seu valor na sequência de Fibonacci usando a função `fibonacci`. Em seguida, some todos esses valores de Fibonacci calculados utilizando a função `soma_recursiva_lista` e imprima na tela a soma total.

Lembre-se: a recursão é uma técnica onde uma função chama a si mesma para resolver problemas menores até chegar a um ponto de parada, chamado de “condição base”.

#### Code Solução

```python
def fibonacci(n: int) -> int:
    """
    Calcula o n-ésimo número da sequência de Fibonacci de forma recursiva.

    Args:
        n: O índice do número na sequência de Fibonacci (n >= 0).

    Returns:
        O n-ésimo número de Fibonacci.
    """
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

def soma_recursiva_lista(lista: list[int]) -> int:
    """
    Soma todos os elementos de uma lista de números inteiros de forma recursiva.

    Args:
        lista: A lista de números inteiros a ser somada.

    Returns:
        A soma total dos elementos da lista.
    """
    if not lista:  # Condição base: lista vazia
        return 0
    else:
        # Soma o primeiro elemento com a soma recursiva do restante da lista
        return lista[0] + soma_recursiva_lista(lista[1:])

# Leitura da entrada: uma string de números separados por ", "
numeros_str = input()
# Converte a string de entrada em uma lista de inteiros
numeros_input = [int(n.strip()) for n in numeros_str.split(',')]

# Calcular o n-ésimo Fibonacci para cada número da entrada
# e armazenar os resultados em uma nova lista
resultados_fibonacci = []
for num in numeros_input:
    resultados_fibonacci.append(fibonacci(num))

# Somar os resultados de Fibonacci utilizando a função recursiva de soma
soma_total = soma_recursiva_lista(resultados_fibonacci)

# Imprimir a soma total
print(soma_total)

```

#### Testes

**Teste 1**
Entrada:
```
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
```
Saída:
```
1596
```

**Teste 2**
Entrada:
```
10, 11, 9, 15, 17, 23, 13, 27, 12, 11, 22
```
Saída:
```
245637
```