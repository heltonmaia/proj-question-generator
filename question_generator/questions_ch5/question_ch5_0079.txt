#### Enunciado

Desenvolva um programa Python que utilize uma função para analisar uma lista de números inteiros. A função, denominada `contar_par_impar`, deverá receber uma lista de números como argumento e retornar dois valores: a quantidade de números pares e a quantidade de números ímpares presentes na lista.

No programa principal, o usuário deverá fornecer uma sequência de números inteiros em uma única linha, separados por espaços. O programa deve ler essa entrada, convertê-la em uma lista de inteiros e, em seguida, chamar a função `contar_par_impar`. Por fim, desempacote os valores retornados pela função em variáveis separadas e imprima na tela a contagem de números pares e ímpares, utilizando uma formatação clara.

A função `contar_par_impar` deve incluir:
- Uma docstring explicando sua funcionalidade, parâmetros e retorno.
- Type hints para os parâmetros e o valor de retorno.

#### Code Solução

```python
from typing import List, Tuple

def contar_par_impar(numeros: List[int]) -> Tuple[int, int]:
    """
    Conta a quantidade de números pares e ímpares em uma lista de inteiros.

    Args:
        numeros (List[int]): A lista de números inteiros para analisar.

    Returns:
        Tuple[int, int]: Uma tupla contendo (quantidade_pares, quantidade_impares).
    """
    pares = 0
    impares = 0
    for num in numeros:
        if num % 2 == 0:
            pares += 1
        else:
            impares += 1
    return pares, impares

# Leitura da entrada do usuário
entrada_str = input().split()
lista_de_numeros = [int(x) for x in entrada_str]

# Chamada da função e desempacotamento dos resultados
qtd_pares, qtd_impares = contar_par_impar(lista_de_numeros)

# Impressão dos resultados
print(f"Quantidade de números pares: {qtd_pares}")
print(f"Quantidade de números ímpares: {qtd_impares}")
```

#### Testes

**Teste 1**
Entrada:
```
1 2 3 4 5 6 7 8 9 10
```
Saída:
```
Quantidade de números pares: 5
Quantidade de números ímpares: 5
```

**Teste 2**
Entrada:
```
-2 -1 0 1 2 3 4 5 6
```
Saída:
```
Quantidade de números pares: 5
Quantidade de números ímpares: 4
```

**Teste 3**
Entrada:
```
11 22 33 44 55 66 77 88 99 100 123 456
```
Saída:
```
Quantidade de números pares: 6
Quantidade de números ímpares: 6
```