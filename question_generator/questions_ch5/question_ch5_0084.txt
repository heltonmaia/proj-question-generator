```
#### Enunciado

Você foi contratado para desenvolver um pequeno utilitário em Python que ajude a identificar o menor e o maior valor entre três números fornecidos pelo usuário. Para tornar o código organizado e reutilizável, você deve utilizar funções, aplicando os conceitos de definição de funções, retorno de valores e uso de `docstrings` e `type hints` conforme o material de estudo.

Implemente as seguintes funções:

1.  `ler_numeros() -> tuple[float, float, float]`:
    *   Esta função não deve receber parâmetros.
    *   Ela deve solicitar ao usuário que insira três números (podendo ser inteiros ou decimais) e deve convertê-los para o tipo `float`.
    *   A função deve retornar esses três números em uma tupla.
    *   **Boas Práticas:** Inclua uma `docstring` descrevendo o propósito da função e seus retornos, e utilize `type hints` para os tipos de retorno.

2.  `encontrar_menor_maior(n1: float, n2: float, n3: float) -> tuple[float, float]`:
    *   Esta função deve receber três números de ponto flutuante como parâmetros.
    *   Ela deve determinar qual é o menor e qual é o maior entre os três números.
    *   A função deve retornar uma tupla contendo o menor e o maior valor, **nesta ordem**.
    *   **Boas Práticas:** Inclua uma `docstring` descrevendo o propósito da função, seus argumentos e seus retornos, e utilize `type hints` para os parâmetros e o tipo de retorno.

No programa principal, você deve:
*   Chamar a função `ler_numeros()` para obter os valores do usuário.
*   Passar os valores obtidos para a função `encontrar_menor_maior()`.
*   Imprimir o menor e o maior número encontrados de forma clara, utilizando f-strings para a formatação da saída.

Certifique-se de que seu código trate adequadamente entradas com números inteiros e decimais, bem como números negativos, convertendo tudo para `float` para consistência.

#### Code Solução

```python
def ler_numeros() -> tuple[float, float, float]:
    """
    Solicita ao usuário que insira três números e os retorna como floats.

    Retorna:
        tuple[float, float, float]: Uma tupla contendo os três números inseridos.
    """
    n1 = float(input())
    n2 = float(input())
    n3 = float(input())
    return n1, n2, n3

def encontrar_menor_maior(n1: float, n2: float, n3: float) -> tuple[float, float]:
    """
    Encontra o menor e o maior valor entre três números.

    Args:
        n1 (float): O primeiro número.
        n2 (float): O segundo número.
        n3 (float): O terceiro número.

    Retorna:
        tuple[float, float]: Uma tupla contendo o menor e o maior valor, nesta ordem.
    """
    menor = min(n1, n2, n3)
    maior = max(n1, n2, n3)
    return menor, maior

# Programa principal
num1, num2, num3 = ler_numeros()
menor_valor, maior_valor = encontrar_menor_maior(num1, num2, num3)

print(f"O menor número é: {menor_valor}")
print(f"O maior número é: {maior_valor}")
```

#### Testes

**Teste 1**
Entrada:
```
10
5
8
```
Saída:
```
O menor número é: 5.0
O maior número é: 10.0
```

**Teste 2**
Entrada:
```
3.14
1.71
1.41
```
Saída:
```
O menor número é: 1.41
O maior número é: 3.14
```

**Teste 3**
Entrada:
```
-5
0
-10
```
Saída:
```
O menor número é: -10.0
O maior número é: 0.0
```

**Teste 4**
Entrada:
```
1
3.14
2
```
Saída:
```
O menor número é: 1.0
O maior número é: 3.14
```