```json
{
  "Enunciado": "Escreva uma função Python chamada `analisar_estatisticas_lista` que recebe uma lista de números (inteiros ou de ponto flutuante) como entrada. Esta função deve calcular e retornar três valores:\n\n1.  A soma de todos os números na lista.\n2.  A média (aritmética) dos números na lista.\n3.  A contagem de números positivos (números maiores que 0) na lista.\n\nA função deve tratar o caso de uma lista vazia, retornando `0.0` para a soma, `0.0` para a média e `0` para a contagem de números positivos. Utilize `type hints` e uma `docstring` para a sua função, conforme as boas práticas de documentação de código em Python.\n\nNo programa principal, demonstre como chamar esta função com diferentes listas de exemplo e imprima os resultados de forma clara e formatada, arredondando os valores da soma e da média para duas casas decimais.",
  "Code Solução": "def analisar_estatisticas_lista(numeros: list[float]) -> tuple[float, float, int]:\n    \"\"\"\n    Calcula a soma, a média e a contagem de números positivos em uma lista.\n\n    Args:\n        numeros (list[float]): A lista de números para análise (pode conter inteiros ou floats).\n\n    Returns:\n        tuple[float, float, int]: Uma tupla contendo a soma total, a média e a contagem de números positivos.\n    \"\"\"\n    if not numeros:\n        return 0.0, 0.0, 0\n\n    soma_total = sum(numeros)\n    media = soma_total / len(numeros)\n    \n    cont_positivos = 0\n    for num in numeros:\n        if num > 0:\n            cont_positivos += 1\n            \n    return soma_total, media, cont_positivos\n\n# --- Exemplos de uso no programa principal ---\n\n# Teste 1: Lista padrão com positivos, negativos e zero\nlista1 = [10.5, -2.0, 5.0, 0, 7.5, -1.0, 3.0]\nsoma1, media1, positivos1 = analisar_estatisticas_lista(lista1)\nprint(f\"Lista: {lista1}\")\nprint(f\"Soma: {soma1:.2f}, Média: {media1:.2f}, Positivos: {positivos1}\")\nprint(\"---------------------------------\")\n\n# Teste 2: Lista vazia\nlista2 = []\nsoma2, media2, positivos2 = analisar_estatisticas_lista(lista2)\nprint(f\"Lista: {lista2}\")\nprint(f\"Soma: {soma2:.2f}, Média: {media2:.2f}, Positivos: {positivos2}\")\nprint(\"---------------------------------\")\n\n# Teste 3: Lista apenas com números positivos inteiros\nlista3 = [1, 2, 3, 4, 5]\nsoma3, media3, positivos3 = analisar_estatisticas_lista(lista3)\nprint(f\"Lista: {lista3}\")\nprint(f\"Soma: {soma3:.2f}, Média: {media3:.2f}, Positivos: {positivos3}\")\nprint(\"---------------------------------\")\n\n# Teste 4: Lista apenas com números negativos\nlista4 = [-10, -5, -1, -8]\nsoma4, media4, positivos4 = analisar_estatisticas_lista(lista4)\nprint(f\"Lista: {lista4}\")\nprint(f\"Soma: {soma4:.2f}, Média: {media4:.2f}, Positivos: {positivos4}\")\nprint(\"---------------------------------\")",
  "Testes": [
    {
      "Entrada": "Não há entrada direta do usuário; as listas são definidas e processadas no código da solução.",
      "Saída": "Lista: [10.5, -2.0, 5.0, 0, 7.5, -1.0, 3.0]\nSoma: 23.00, Média: 3.29, Positivos: 4\n---------------------------------\nLista: []\nSoma: 0.00, Média: 0.00, Positivos: 0\n---------------------------------\nLista: [1, 2, 3, 4, 5]\nSoma: 15.00, Média: 3.00, Positivos: 5\n---------------------------------\nLista: [-10, -5, -1, -8]\nSoma: -24.00, Média: -6.00, Positivos: 0\n---------------------------------"
    }
  ]
}
```